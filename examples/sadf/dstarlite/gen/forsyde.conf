# file        : forsyde.conf 
# description : automatically generated configuration file
# usage       : change the right-hand values as suggested 
# works with  : f2dot-0.2.0.[]
# ####################################################################

# The direction of the plotted graph is controlled with
# DIRECTION. Choose LR for left-to-right plotting or TB for
# top-to-bottom plotting. May be overridden by comand-line arguments.

DIRECTION=LR


# FORMAT determines the ouptut file format. It can be one of the
# following: canon, cmap, cmapx, cmapx_np, dia, dot, fig, gd, gd2,
# gif, hpgl, imap, imap_np, ismap, jpe, jpeg, jpg, mif, mp, pcl, pdf,
# pic, plain, plain-ext, png, ps, ps2, svg, svgz, vml, vmlz, vrml,
# vtx, wbmp, xdot, xlib. For more information, check the documentation
# of the pygraphviz library (http://pygraphviz.github.io/). May be
# overridden by command-line arguments.

FORMAT=dot

# The plotting program (algorithm) is controlled with PROG. It can be
# one of the following neato, dot, twopi, circo, fdp, nop. For more
# information, check the documentation of the pygraphviz library
# (http://pygraphviz.github.io/). May be overridden by command-line
# arguments.

PROG=dot



# DETAIL_LEVEL determines the maximum level for recursive parsing of
# xml files. In other words, it decides the level of detail plotted in
# the graph. Once that level has been reached, all composite processes
# are turned into "black boxes" and drawn as leaf processes. May be
# overridden by command-line arguments.
DETAIL_LEVEL=99

# LEAF_INFO_TAGS decides what information should appear in the leaf
# process nodes. This information is extracted from the XML files,
# through XPath queries, included in a custom layout markup.  The tool
# has XPath 1.0 support. For a tutorial on how to build lable queries,
# please consult f2dot's web page.
LEAF_INFO_TAGS={ ./@name } { ./process_constructor/@name }

# COMPOSITE_INFO_TAGS decides what information should appear in the
# composite process subgraphs. This information is extracted from the
# XML files, through XPath queries, included in a custom layout
# grammar.  The tool has XPath 1.0 support. For a tutorial on how to
# build lable queries, please consult f2dot's web page.
COMPOSITE_INFO_TAGS={ ./@name }

# LEAF_PORT_INFO_TAGS decides what information should be plotted for
# the leaf process ports. This information is extracted from the XML
# files, through XPath queries, included in a custom layout grammar.
# The tool has XPath 1.0 support. For a tutorial on how to build lable
# queries, please consult f2dot's web page.
LEAF_PORT_INFO_TAGS=

# COMPOSITE_PORT_INFO_TAGS decides what information should be plotted
# for the composite process ports. This information is extracted from
# the XML files, through XPath queries, included in a custom layout
# grammar.  The tool has XPath 1.0 support. For a tutorial on how to
# build lable queries, please consult f2dot's web page.
COMPOSITE_PORT_INFO_TAGS=

# SIGNAL_INFO_TAGS decides what information should appear on the
# signals. This information is extracted from the XML files, through
# XPath queries, included in a custom layout grammar.  The tool has
# XPath 1.0 support. For a tutorial on how to build lable queries,
# please consult f2dot's web page.
SIGNAL_INFO_TAGS=

# CLUSTER_INPUT_PORTS switches whether or not the nodes corresponding
# to the input ports are grouped together.
CLUSTER_INPUT_PORTS=YES

# CLUSTER_OUTPUT_PORTS switches whether or not the nodes corresponding
# to the input ports are grouped together.
CLUSTER_OUTPUT_PORTS=YES

# CLUSTER_SOURCES switches whether or not the nodes corresponding to
# the source processes are grouped together.
CLUSTER_SOURCES=NO

# CLUSTER_SINKS switches whether or not the nodes corresponding to the
# sink processes are grouped together.
CLUSTER_SINKS=NO

# CLUSTER_OTHERS switches whether or not the other nodes (not
# clustered already) are grouped inside one cluster, for physical
# separation from the other nodes.
CLUSTER_OTHERS=NO

# The LEAF_BASE_COLOR option controls the color of the leaf process
# nodes in the output graph. he format of the color is "#RGB" where R,
# G, B are the red, green respectively blue values in hex format
# (00-FF).
LEAF_BASE_COLOR=#FCD975

# The COMPOSITE_BOX_COLOR option controls the color of the composite
# processes which have been turned to "black boxes" and plotted as
# nodes in the output graph. he format of the color is "#RGB" where R,
# G, B are the red, green respectively blue values in hex format
# (00-FF).
COMPOSITE_BOX_COLOR=#79AB78 

# The COMPOSITE_BASE_COLOR is a set of three coefficients for
# calculating the color gradients for the composite process subgraphs
# in the output graph. These coefficients are provided as integers
# separated by commas (,) and they represent the decaying rate of the
# red, green, respectively blue components.
COMPOSITE_BACKGROUND_COLOR_COEFFICIENTS=11,16,21

